pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
player = {}
player.x=60
player.y=60
player.aim=.5
player.r=3
player.tip={}
player.br={}
player.br.x = 0
player.br.y = 0
player.bl={}
player.bl.x = 0
player.bl.y = 0
player.tip.x = 0
player.tip.y = 0
player.hp=0
player.max_hp=3
player.dx=0
player.dy=0
player.rotspeed=.025
player.accelpow=.15
player.is_accelerating=false
player.max_speed=3
player.shooting_cd_counter=0
player.shooting_cd=15
player.fuel=0
player.max_fuel=1023

world_max_x=255
world_max_y=255

enemy={}
enemy.x=0
enemy.y=0
enemy.dx=0
enemy.dy=0
enemy.kind=0
enemy.hp=0
enemy.max_hp=0

bullet_spd=3
bullets={}

enemies={}

function _init()
  player.x=100
  player.y=100
  player.hp=player.max_hp
  player.aim=.5
  player.dx=0
  player.dy=0
  player.color=7
  camera_pos={x=0,y=0}
  player.fuel=player.max_fuel
end

function _update()
 update_player()
 update_bullets()
 update_enemies()
 update_camera()
end

function _draw()
  cls()
  camera(camera_pos.x,camera_pos.y)
  draw_world()
  draw_player()
  draw_bullets()
  camera(0,0)
  draw_hud()
end

function update_player()
  local previous_dx=player.dx
  local previous_dy=player.dy
  player.tip.x = (sin(player.aim)*player.r)+player.x
  player.tip.y = (cos(player.aim)*player.r)+player.y
  player.br.x = (sin(player.aim+.39)*player.r)+player.x
  player.br.y = (cos(player.aim+.39)*player.r)+player.y
  player.bl.x = (sin(player.aim-.39)*player.r)+player.x
  player.bl.y = (cos(player.aim-.39)*player.r)+player.y
  player.x+=player.dx
  player.y+=player.dy
  
  if player.x<=0 then
      player.x=0
      player.dx=-player.dx/2
    elseif player.x>=world_max_x then
      player.x=world_max_x
      player.dx=-player.dx/2
    end
    if player.y<=0 then
      player.y=0
      player.dy=-player.dy/2
    elseif player.y>=world_max_y then
      player.y=world_max_y
      player.dy=-player.dy/2
    end
  
  if player.shooting_cd_counter>0 then
    player.shooting_cd_counter-=1
  end

  if btn(0) then
    player.aim-=player.rotspeed
  end
  if btn(1) then
    player.aim+=player.rotspeed
  end
  if btn(2) and player.fuel>0 then
    player.fuel-=1
    player.dx+=-sin(player.aim*-1)*player.accelpow
    player.dy+=cos(player.aim*-1)*player.accelpow
    if abs(player.dx) > player.max_speed then
      if player.dx > 0 then
        player.dx=player.max_speed
      else
        player.dx=-player.max_speed
      end 
    end
    
    if abs(player.dy) > player.max_speed then
      if player.dy > 0 then
        player.dy=player.max_speed
      else
        player.dy=-player.max_speed
      end
    end
    if player.dx!=previous_dx or player.dy!=previous_dy then
      player.is_accelerating=true
      sfx(0)
    end
  else
    player.is_accelerating=false
  end
  
  if btn(3) and player.fuel>0 then
    player.fuel-=1
    if (player.dx>0 or player.dy>0) then sfx(0) end
    
    if player.dx>0 then
      if player.dx-player.accelpow<=0 then
        player.dx=0
      else
        player.dx-=player.accelpow
      end
      
    elseif player.dx<0 then
      if player.dx+player.accelpow>=0 then
        player.dx=0
      else
        player.dx+=player.accelpow
      end
    end
      
    if player.dy>0 then
      if player.dy-player.accelpow<=0 then
        player.dy=0
      else
        player.dy-=player.accelpow
      end
      
    elseif player.dy<0 then
      if player.dy+player.accelpow>=0 then
        player.dy=0
      else
        player.dy+=player.accelpow
      end
    end
    
    if player.dx!=previous_dx or player.dy!=previous_dy then
      player.is_accelerating=true
      sfx(0)
    else
      player.is_accelerating=false
    end
    
  end
  
  if btn(4) then
    if player.shooting_cd_counter==0 then
  	   fire_bullet()
  	   player.shooting_cd_counter=player.shooting_cd
  	 end
  end
  
  if (player.fuel==0 or player.hp==0) then game_over() end
  
end

function update_enemies()
end

function update_bullets()
  for bullet in all(bullets) do
    bullet.x+=bullet.dx
    bullet.y+=bullet.dy
    bullet.w=1
    bullet.h=1
    bullet.t-=1
    
    if bullet.x<0 then
      bullet.t=0
    elseif bullet.x>world_max_x then
      bullet.x=0
    end
    if bullet.y<0 then
      bullet.y=world_max_y
    elseif bullet.y>world_max_y then
      bullet.y=0
    end
    
				if bullet.t<=0
				   or bullet.x<0
				   or bullet.x>=world_max_x
				   or bullet.y<0
				   or bullet.y>=world_max_y then
     del(bullets, bullet)
    end
        
  end
end

function update_camera()
  camera_pos.x=player.x-60
  camera_pos.y=player.y-60
end
  
function draw_player()
  line(player.tip.x, player.tip.y, player.br.x, player.br.y, player.color)
  line(player.tip.x, player.tip.y, player.bl.x, player.bl.y, player.color)
  if player.is_accelerating then
    line(player.bl.x, player.bl.y, player.br.x, player.br.y, color(9))
  else
    line(player.bl.x, player.bl.y, player.br.x, player.br.y, player.color)
  end
  --displays velocity vectors
  --line(player.tip.x,player.tip.y, player.tip.x+player.dx*5, player.tip.y,color(10))
  --line(player.tip.x,player.tip.y, player.tip.x, player.tip.y+player.dy*5,color(10))
end

function draw_hud()
  for i=1,player.max_hp do
   spr(5,9*i-5,12)
  end
  
  for i=1,player.hp do
   spr(4,9*i-5,12)
  end
end

function draw_bullets()
  for bullet in all(bullets) do
   pset(bullet.x,bullet.y,player.color)
  end
end

function draw_world()
 --world border
 rect(0,0,world_max_x,world_max_y,color(6))
 map(0,0,0,0,128,64)
end

function fire_bullet()
  if #bullets<5 then
    sfx(1)
    local bullet = {}
    bullet.dx=-sin(player.aim*-1)*bullet_spd
    bullet.dy=cos(player.aim*-1)*bullet_spd
    bullet.x=player.tip.x
    bullet.y=player.tip.y
    bullet.t=30
    add(bullets,bullet)
  end
end

function game_over()
 run()
end

function point_inside(point, rect)
  if point.x <= rect.x+rect.w and
     point.x >= rect.x and
     point.y <= rect.y+rect.h and
     point.y >= rect.y then
     return true
  end
  return false
end

function check_collision(thing1, thing2)
  if thing1.x <= thing2.x+thing2.w and
     thing1.x+thing1.w >= thing2.x and
     thing1.y+thing1.h >= thing2.y and
     thing1.y <= thing2.y+thing2.h and
     thing1.y+thing1.h >= thing2.y then
     
    return true
  end
  return false
end
__gfx__
00000000666666666666666600088000077007700770077000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000600000066000000607766770788778877007700700000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000600bb00660bbbb0607666670788888877000000700000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000060bbbb0660b0000686688668788888877000000700000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000060bbbb0660bbb00686688668788888877000000700000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000600bb00660b0000607666670078888700700007000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000600000066000000607766770007887000070070000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666666666666600088000000770000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000044f4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000444f44440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000004f44ff4444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000004fff44fff44400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000444fff444f4ff40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000044444444444f440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000044ff4466664f4444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000044fff46556444f44000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000004f44f4655644fff4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000444444666644ff44000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000004f4f44444444440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000004ffff44444ff440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000004ff44f44f4f400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000444f4f444f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000444ff4440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000004444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1515151515151507151515151515151500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1515151515070707070715151515151500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1515151515070715150707070707151500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1515151507070715151515151507071500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1515150707150707070715150707071500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1515150715150707070707070707151500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1515071515150715150707070707151500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1507070707070707071515150707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1507151507070715151515151515151500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000012130000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000022230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000200000d6320b6320b6320a6320a632096320b63209632086320763206632056320563205602056020560206602066020760206602066020560204602026020260202602026020260203602036020360202602
00010000331502f1502b150281502515023150201501e1501c1501b150191501b10019100181001610015100131001210011100101000d10007100041000110010600106000f6000f6000e6000c600086000a600
__music__
00 01424344

